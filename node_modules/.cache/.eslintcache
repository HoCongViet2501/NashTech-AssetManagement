[{"/home/ubuntu/go/frontend/src/index.js":"1","/home/ubuntu/go/frontend/src/App.js":"2","/home/ubuntu/go/frontend/src/components/ChangePassword.js":"3","/home/ubuntu/go/frontend/src/pages/Login/Login.js":"4","/home/ubuntu/go/frontend/src/pages/Register/Register.js":"5","/home/ubuntu/go/frontend/src/pages/Home/Home.js":"6","/home/ubuntu/go/frontend/src/components/SuccessChange.js":"7","/home/ubuntu/go/frontend/src/api/getUpdatePassword.js":"8","/home/ubuntu/go/frontend/src/api/getLogin.js":"9","/home/ubuntu/go/frontend/src/components/Header.js":"10","/home/ubuntu/go/frontend/src/components/Logout.js":"11","/home/ubuntu/go/frontend/src/api/getLogout.js":"12"},{"size":323,"mtime":1637602225367,"results":"13","hashOfConfig":"14"},{"size":431,"mtime":1637597112061,"results":"15","hashOfConfig":"14"},{"size":4416,"mtime":1637597112061,"results":"16","hashOfConfig":"14"},{"size":2616,"mtime":1637597112061,"results":"17","hashOfConfig":"14"},{"size":2575,"mtime":1637597112061,"results":"18","hashOfConfig":"14"},{"size":139,"mtime":1637597112061,"results":"19","hashOfConfig":"14"},{"size":978,"mtime":1637597112061,"results":"20","hashOfConfig":"14"},{"size":597,"mtime":1637602216583,"results":"21","hashOfConfig":"14"},{"size":449,"mtime":1637597112061,"results":"22","hashOfConfig":"14"},{"size":1090,"mtime":1637597112061,"results":"23","hashOfConfig":"14"},{"size":1329,"mtime":1637597112061,"results":"24","hashOfConfig":"14"},{"size":609,"mtime":1637597112061,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1um77i9",{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},"/home/ubuntu/go/frontend/src/index.js",[],"/home/ubuntu/go/frontend/src/App.js",["58"],"import { Route } from \"react-router\";\nimport ChangePass from \"./components/ChangePassword\";\nimport Login from \"./pages/Login/Login\";\nimport Register from \"./pages/Register/Register\";\nimport Home from \"./pages/Home/Home\";\nfunction App() {\n\treturn (\n\t\t<div>\n\t\t\t<Route path=\"/login\" component={Login} />\n\t\t\t<Route path=\"/register\" component={Register} />\n\t\t\t<Route path=\"/home\" component={Home} />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","/home/ubuntu/go/frontend/src/components/ChangePassword.js",["59","60","61","62","63","64"],"import { Button, Modal } from 'react-bootstrap';\nimport { useState, useEffect } from 'react';\nimport { getUpdatePass } from '../api/getUpdatePassword';\nimport { Route, useHistory } from 'react-router';\nimport { SuccessChange } from './SuccessChange';\nimport { Link } from 'react-router-dom';\n\n\nconst ChangePass = () => {\n    let history = useHistory();\n\n    const [userRequest, setUserRequest] = useState({\n        username: localStorage.getItem(\"username\"),\n        email: localStorage.getItem(\"email\"),\n        password: \"\",\n        newPassword: \"\"\n    })\n\n    const [isInvalid, setIsInvalid] = useState(false);\n\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const [message, setMessage] = useState(\"\");\n\n    const [isFilled, setIsFilled] = useState(false);\n\n    const handleFilled = (userRequest) => {\n        if (!userRequest.password == \"\" && !userRequest.newPassword == \"\") {\n            setIsFilled(true);\n        } else if (userRequest.password === \"\" || userRequest.newPassword === \"\") {\n            setIsFilled(false);\n        }\n    }\n\n    const handleChangePass = async () => {\n        let data = await getUpdatePass(userRequest);\n        if (data == null) {\n            setIsInvalid(true)\n            setMessage(\"Your password is incorrect\")\n        }else if (data.message ===\"\"){\n            setIsInvalid(true)\n            setMessage(\"Your password is incorrect\")\n        }\n         else if (data.message === \"SUCCESS_CHANGE_PASSWORD\") {\n            setIsInvalid(false);\n            setShow(false);\n        }\n\n    }\n\n    useEffect(() => handleFilled(userRequest),[userRequest]);\n\n    return (\n        <>\n            <Button variant=\"default\" onClick={handleShow}>\n                Change password\n            </Button>\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title><p class=\"h3 text-danger\">Change password</p></Modal.Title>\n                </Modal.Header>\n\n                <Modal.Body>\n                    <form className=\"flex flex-column mx-auto bg-white p-3\">\n                        <div\n                            class={`alert alert-danger my-2 ${isInvalid ? \"\" : \"d-none\"}`}\n                            role=\"alert\"\n                        >\n                            {message}\n                            { }\n                        </div>\n                        <div>\n                            <label className=\"form-label text-secondary\" htmlFor=\"password\">\n                                Current password\n                            </label>\n                            <input\n                                class=\"form-control\"\n                                onChange={(e) => setUserRequest({ ...userRequest, password: e.target.value })}\n                                type=\"password\"\n                                value={userRequest.password}\n                                id=\"password\"\n                            />\n\n                        </div>\n                        <div className=\"flex flex-column mt-2\">\n                            <label className=\"form-label text-secondary\" htmlFor=\"password\">\n                                New password\n                            </label>\n                            <input\n                                class=\"form-control\"\n                                onChange={(e) => setUserRequest({ ...userRequest, newPassword: e.target.value })}\n                                type=\"password\"\n                                value={userRequest.newPassword}\n                                id=\"newPassword\"\n                            />\n                        </div>\n\n\n                    </form>\n\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Cancel\n                    </Button>\n                    {isFilled ? (\n                        <Button variant=\"danger\" onClick={() => handleChangePass()}>\n                            Change password\n                        </Button>\n                    ) :\n                        <Button variant=\"danger\" disabled>\n                            Change password\n                        </Button>}\n\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n}\nexport default ChangePass\n","/home/ubuntu/go/frontend/src/pages/Login/Login.js",["65","66"],"import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getLogin } from \"../../api/getLogin\";\nimport { useHistory } from \"react-router-dom\";\nimport { Alert, Form } from \"react-bootstrap\";\nconst Login = () => {\n\tlet history = useHistory();\n\tconst [info, setInfo] = useState({\n\t\tusername: \"\",\n\t\tpassword: \"\"\n\t});\n\tconst [isFilled, setIsFilled] = useState(false);\n\tconst [isInvalid, setIsInvalid] = useState(false);\n\n\tconst handleLogin = async () => {\n\t\tlet data = await getLogin(info);\n\t\tif (data == null) {\n\t\t\tsetIsInvalid(true);\n\t\t} else if (data.message === \"SUCCESS_LOGIN_USER\") {\n\t\t\tlocalStorage.setItem(\"jwtToken\", data.data.token);\n\t\t\tlocalStorage.setItem(\"username\", data.data.username);\n\t\t\tlocalStorage.setItem(\"refreshToken\", data.data.refreshToken);\n\t\t\tlocalStorage.setItem(\"email\", data.data.email);\n\t\t\tsetIsInvalid(false);\n\t\t\thistory.push(\"/home\");\n\t\t}\n\t};\n\n\tconst handleInput = (info) => {\n\t\tif (info.username !== \"\" && info.password !== \"\") {\n\t\t\tsetIsFilled(true);\n\t\t} else if (info.username === \"\" || info.password === \"\") {\n\t\t\tsetIsFilled(false);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\thandleInput(info);\n\t}, [info]);\n\n\treturn (\n\t\t<div className=\"flex text-start d-grid\">\n\t\t\t<div className=\"flex flex-column mx-auto bg-white p-3 col-4 mt-5\">\n\t\t\t\t<p class=\"h3 text-secondary text-center\">Log in</p>\n\t\t\t\t<Form.Group className=\"mt-3\">\n\t\t\t\t\t<Form.Label className=\"form-label text-secondary\" htmlFor=\"username\">\n\t\t\t\t\t\tUsername\n\t\t\t\t\t</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\tsetInfo({ ...info, username: e.target.value });\n\t\t\t\t\t\t}}\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tvalue={info.username}\n\t\t\t\t\t\tid=\"username\"\n\t\t\t\t\t/>\n\t\t\t\t</Form.Group>\n\t\t\t\t<Form.Group className=\"flex flex-column mt-2\">\n\t\t\t\t\t<Form.Label className=\"form-label text-secondary\" htmlFor=\"password\">\n\t\t\t\t\t\tPassword\n\t\t\t\t\t</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\tsetInfo({ ...info, password: e.target.value });\n\t\t\t\t\t\t}}\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tvalue={info.password}\n\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t/>\n\t\t\t\t</Form.Group>\n\t\t\t\t<Alert\n\t\t\t\t\tclass={`alert alert-danger my-2 ${isInvalid ? \"\" : \"d-none\"}`}\n\t\t\t\t\trole=\"alert\"\n\t\t\t\t>\n\t\t\t\t\tUsername or password is incorrect. Please try again\n\t\t\t\t</Alert>\n\t\t\t\t<div className=\"d-grid mt-3\">\n\t\t\t\t\t{isFilled ? (\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"col-4 offset-4 btn btn-danger\"\n\t\t\t\t\t\t\tonClick={() => handleLogin()}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tLog in\n\t\t\t\t\t\t</button>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<button className=\"col-4 offset-4 btn btn-danger\" disabled>\n\t\t\t\t\t\t\tLog in\n\t\t\t\t\t\t</button>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Login;\n","/home/ubuntu/go/frontend/src/pages/Register/Register.js",["67"],"import { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Register = () => {\n\tconst [info, setInfo] = useState({\n\t\tusername: \"\",\n\t\tpassword: \"\",\n\t\trepassword: \"\",\n\t\temail: \"\",\n\t\tdob: \"\",\n\t\tfirstname: \"\",\n\t\tlastname: \"\",\n\t\tphone: \"\",\n\t\tgender: 1\n\t});\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"flex flex-column mx-auto bg-white w-25 p-3\">\n\t\t\t\t<p class=\"h3 text-g\">Register</p>\n\t\t\t\t<div>\n\t\t\t\t\t<label className=\"form-label text-secondary\" htmlFor=\"username\">\n\t\t\t\t\t\tUsername\n\t\t\t\t\t</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclass=\"form-control\"\n\t\t\t\t\t\tonChange={(e) => setInfo({ ...info, username: e.target.value })}\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tvalue={info.username}\n\t\t\t\t\t\tid=\"username\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"flex flex-column mt-2\">\n\t\t\t\t\t<label className=\"form-label text-secondary\" htmlFor=\"password\">\n\t\t\t\t\t\tPassword\n\t\t\t\t\t</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclass=\"form-control\"\n\t\t\t\t\t\tonChange={(e) => setInfo({ ...info, password: e.target.value })}\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tvalue={info.password}\n\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"flex flex-column mt-2\">\n\t\t\t\t\t<label className=\"form-label text-secondary\" htmlFor=\"password\">\n\t\t\t\t\t\tRe-password\n\t\t\t\t\t</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclass=\"form-control\"\n\t\t\t\t\t\tonChange={(e) => setInfo({ ...info, repassword: e.target.value })}\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tvalue={info.repassword}\n\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"flex flex-column mt-2\">\n\t\t\t\t\t<label className=\"form-label text-secondary\" htmlFor=\"email\">\n\t\t\t\t\t\tEmail\n\t\t\t\t\t</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclass=\"form-control\"\n\t\t\t\t\t\tonChange={(e) => setInfo({ ...info, email: e.target.value })}\n\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\tvalue={info.email}\n\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"flex flex-column mt-2\">\n\t\t\t\t\t<label className=\"form-label text-secondary\" htmlFor=\"phone\">\n\t\t\t\t\t\tPhone\n\t\t\t\t\t</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclass=\"form-control\"\n\t\t\t\t\t\tonChange={(e) => setInfo({ ...info, phone: e.target.value })}\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tvalue={info.phone}\n\t\t\t\t\t\tid=\"phone\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"flex flex-column mt-2\">\n\t\t\t\t\t<label className=\"form-label text-secondary\" htmlFor=\"gender\">\n\t\t\t\t\t\tGender\n\t\t\t\t\t</label>\n\t\t\t\t\t<select\n\t\t\t\t\t\tclassName=\"form-select\"\n\t\t\t\t\t\tvalue={info.gender}\n\t\t\t\t\t\tonChange={(e) => setInfo({ ...info, gender: e.target.value })}\n\t\t\t\t\t>\n\t\t\t\t\t\t<option value=\"1\">Man</option>\n\t\t\t\t\t\t<option value=\"0\">Women</option>\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"mt-3\">\n\t\t\t\t\t<button className=\"ms-3 btn btn-danger\">Register</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Register;\n","/home/ubuntu/go/frontend/src/pages/Home/Home.js",[],"/home/ubuntu/go/frontend/src/components/SuccessChange.js",[],"/home/ubuntu/go/frontend/src/api/getUpdatePassword.js",["68"],"import axios from \"axios\"\n\nexport const getUpdatePass = async (formData) => {\n    let url =\n        process.env.REACT_APP_ENV.trim() === \"dev\"\n            ? process.env.REACT_APP_DEV_URL\n            : process.env.REACT_APP_PROD_URL;\n\n    url += \"/auth/updatePassword\";\n    let data;\n    \n    let respone = await axios\n        .post(url, {\n            username: formData.username,\n            email: formData.email,\n            password: formData.newPassword,\n        }).then((res) => {\n            data = res.data;\n        }).catch((e) => {\n            data = null;\n        });\n\n    return data;\n}","/home/ubuntu/go/frontend/src/api/getLogin.js",["69"],"import axios from \"axios\";\n\nexport const getLogin = async (formData) => {\n\tlet url =\n\t\tprocess.env.REACT_APP_ENV.trim() === \"dev\"\n\t\t\t? process.env.REACT_APP_DEV_URL\n\t\t\t: process.env.REACT_APP_PROD_URL;\n\n\turl += \"/auth/login\";\n\tlet data;\n\tlet response = await axios\n\t\t.post(url, {\n\t\t\tusername: formData.username,\n\t\t\tpassword: formData.password\n\t\t})\n\t\t.then((res) => {\n\t\t\tdata = res.data;\n\t\t})\n\t\t.catch((e) => {\n\t\t\tdata = null;\n\t\t});\n\treturn data;\n};\n","/home/ubuntu/go/frontend/src/components/Header.js",["70"],"import { Nav, NavDropdown, Navbar, Container } from \"react-bootstrap\"\nimport ChangePass from './ChangePassword';\nimport Logout from \"./Logout\";\n\nconst Header = () => {\n    return <>\n\n        <Navbar bg=\"danger\" variant=\"dark\" expand=\"lg\" >\n            <Container>\n                <Navbar.Brand href=\"#home\">Home</Navbar.Brand>\n                <Navbar.Toggle />\n                <Navbar.Collapse className=\"justify-content-end\">\n                    <Navbar.Text>\n                        <NavDropdown className=\"fs-5\" title=\"Nguyen\"  id=\"basic-nav-dropdown\">\n                            <NavDropdown.Item href=\"#action/changePass\">\n                                <ChangePass></ChangePass>\n                            </NavDropdown.Item>\n                            <NavDropdown.Item href=\"#action/logout\" >\n                                <Logout></Logout>\n                            </NavDropdown.Item>\n                        </NavDropdown>\n                    </Navbar.Text>\n                </Navbar.Collapse>\n            </Container>\n        </Navbar>\n    </>\n\n}\n\nexport default Header;\n","/home/ubuntu/go/frontend/src/components/Logout.js",[],"/home/ubuntu/go/frontend/src/api/getLogout.js",["71"],"import axios from \"axios\";\n\nexport const getLogout = async (formData) => {\n    let url =\n        process.env.REACT_APP_ENV.trim() === \"dev\"\n            ? process.env.REACT_APP_DEV_URL\n            : process.env.REACT_APP_PROD_URL;\n\n    url += \"/auth/logout\";\n    let data;\n    let respone = await axios\n        .post(url,{ \n                accessToken : formData.accessToken,\n                refreshToken: formData.refreshToken\n            })\n            .then((res) =>{\n                data = res.data;\n            })\n            .catch((e) =>{\n                data = null;\n            });\n    return data;\n\n}",{"ruleId":"72","severity":1,"message":"73","line":2,"column":8,"nodeType":"74","messageId":"75","endLine":2,"endColumn":18},{"ruleId":"72","severity":1,"message":"76","line":4,"column":10,"nodeType":"74","messageId":"75","endLine":4,"endColumn":15},{"ruleId":"72","severity":1,"message":"77","line":5,"column":10,"nodeType":"74","messageId":"75","endLine":5,"endColumn":23},{"ruleId":"72","severity":1,"message":"78","line":6,"column":10,"nodeType":"74","messageId":"75","endLine":6,"endColumn":14},{"ruleId":"72","severity":1,"message":"79","line":10,"column":9,"nodeType":"74","messageId":"75","endLine":10,"endColumn":16},{"ruleId":"80","severity":1,"message":"81","line":31,"column":35,"nodeType":"82","messageId":"83","endLine":31,"endColumn":37},{"ruleId":"80","severity":1,"message":"81","line":31,"column":69,"nodeType":"82","messageId":"83","endLine":31,"endColumn":71},{"ruleId":"72","severity":1,"message":"84","line":1,"column":8,"nodeType":"74","messageId":"75","endLine":1,"endColumn":13},{"ruleId":"72","severity":1,"message":"78","line":3,"column":10,"nodeType":"74","messageId":"75","endLine":3,"endColumn":14},{"ruleId":"72","severity":1,"message":"78","line":2,"column":10,"nodeType":"74","messageId":"75","endLine":2,"endColumn":14},{"ruleId":"72","severity":1,"message":"85","line":12,"column":9,"nodeType":"74","messageId":"75","endLine":12,"endColumn":16},{"ruleId":"72","severity":1,"message":"86","line":11,"column":6,"nodeType":"74","messageId":"75","endLine":11,"endColumn":14},{"ruleId":"72","severity":1,"message":"87","line":1,"column":10,"nodeType":"74","messageId":"75","endLine":1,"endColumn":13},{"ruleId":"72","severity":1,"message":"85","line":11,"column":9,"nodeType":"74","messageId":"75","endLine":11,"endColumn":16},"no-unused-vars","'ChangePass' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'SuccessChange' is defined but never used.","'Link' is defined but never used.","'history' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'axios' is defined but never used.","'respone' is assigned a value but never used.","'response' is assigned a value but never used.","'Nav' is defined but never used."]